<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out\doppler_fft_base.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out\doppler_fft_base.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6120001: Last Updated: Sun Jun  1 21:01:21 2025
<BR><P>
<H3>Maximum Stack Usage =        696 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; radar_fmcw_cfg &rArr; hal_radar_init &rArr; radar_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1a]">AFC_PLL_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">AFC_PLL_Handler</a><BR>
 <LI><a href="#[5e]">_sys_exit</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e]">_sys_exit</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1a]">AFC_PLL_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[25]">AON_WDT_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[19]">AUX_ADC_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[1d]">BOR_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[12]">CACHE_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[13]">DMA_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[a]">DUALTIMER_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[18]">EFUSE_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[1e]">GPIO0_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[1f]">GPIO1_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[20]">GPIO2_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[21]">GPIO3_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[22]">GPIO4_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[23]">GPIO5_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[24]">GPIO6_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[11]">GPIO_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[10]">I2C_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[17]">KEY_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[1b]">LIGHT_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[1c]">LOW_BAT_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[16]">PLL_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[14]">RADAR_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[15]">RC_CAL_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[e]">SPI0_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[f]">SPI1_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[26]">SystemInit</a> from system_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(.text)
 <LI><a href="#[6]">TIMER0_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[7]">TIMER1_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[8]">TIMER2_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[9]">TIMER3_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[b]">UART0_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[c]">UART1_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[d]">UART2_Handler</a> from at6010_irq.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[27]">__main</a> from __main.o(!!!main) referenced from startup_cmsdk_cm0plus.o(.text)
 <LI><a href="#[34]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[28]">adc_vfft_end_isr</a> from doppler_fft_base_main.o(.text) referenced from doppler_fft_base_main.o(.text)
 <LI><a href="#[29]">adc_vfft_half_isr</a> from doppler_fft_base_main.o(.text) referenced from doppler_fft_base_main.o(.text)
 <LI><a href="#[35]">cache_flush</a> from at6010_cache.o(.text.cache_flush) referenced from at6010_cache.o(.text.cache_init)
 <LI><a href="#[31]">fft_fill_this_buffer</a> from hal_fft.o(.text) referenced 2 times from hal_fft.o(.text)
 <LI><a href="#[33]">fputc</a> from retarget.o(.text) referenced from _printf_char_file.o(.text)
 <LI><a href="#[32]">invoke_cfar_callback</a> from hal_fft.o(.text) referenced from hal_fft.o(.text)
 <LI><a href="#[30]">invoke_fft_callback</a> from hal_fft.o(.text) referenced from hal_fft.o(.text)
 <LI><a href="#[3a]">radar_ant_rx_num_get</a> from at6010_radar.o(.text.radar_ant_rx_num_get) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[39]">radar_ant_rx_num_set</a> from at6010_radar.o(.text.radar_ant_rx_num_set) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[4a]">radar_frame_interval_get</a> from at6010_radar_frame.o(.text.radar_frame_interval_get) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[49]">radar_frame_interval_set</a> from at6010_radar_frame.o(.text.radar_frame_interval_set) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[48]">radar_frame_repeat_times_get</a> from at6010_radar_frame.o(.text.radar_frame_repeat_times_get) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[47]">radar_frame_repeat_times_set</a> from at6010_radar_frame.o(.text.radar_frame_repeat_times_set) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[36]">radar_lp_enter</a> from at6010_radar.o(.text.radar_lp_enter) referenced from at6010_radar.o(.text.radar_lp_init)
 <LI><a href="#[37]">radar_lp_exit</a> from at6010_radar.o(.text.radar_lp_exit) referenced from at6010_radar.o(.text.radar_lp_init)
 <LI><a href="#[3e]">radar_param_hpf1_freq_get</a> from at6010_radar.o(.text.radar_param_hpf1_freq_get) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[3d]">radar_param_hpf1_freq_set</a> from at6010_radar.o(.text.radar_param_hpf1_freq_set) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[3c]">radar_param_hpf1_gain_get</a> from at6010_radar.o(.text.radar_param_hpf1_gain_get) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[3b]">radar_param_hpf1_gain_set</a> from at6010_radar.o(.text.radar_param_hpf1_gain_set) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[42]">radar_param_hpf2_freq_get</a> from at6010_radar.o(.text.radar_param_hpf2_freq_get) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[41]">radar_param_hpf2_freq_set</a> from at6010_radar.o(.text.radar_param_hpf2_freq_set) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[40]">radar_param_hpf2_gain_get</a> from at6010_radar.o(.text.radar_param_hpf2_gain_get) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[3f]">radar_param_hpf2_gain_set</a> from at6010_radar.o(.text.radar_param_hpf2_gain_set) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[46]">radar_param_lpf_freq_get</a> from at6010_radar.o(.text.radar_param_lpf_freq_get) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[45]">radar_param_lpf_freq_set</a> from at6010_radar.o(.text.radar_param_lpf_freq_set) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[44]">radar_param_lpf_gain_get</a> from at6010_radar.o(.text.radar_param_lpf_gain_get) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[43]">radar_param_lpf_gain_set</a> from at6010_radar.o(.text.radar_param_lpf_gain_set) referenced from hal_radar.o(.rodata.radar_param_func)
 <LI><a href="#[38]">radar_ulp_enter</a> from at6010_radar.o(.text.radar_ulp_enter) referenced from at6010_radar.o(.text.radar_ulp_init)
 <LI><a href="#[2d]">sys_clk_disable_uart0</a> from at6010_clock.o(.text) referenced from hal_uart.o(.text)
 <LI><a href="#[2e]">sys_clk_disable_uart1</a> from at6010_clock.o(.text) referenced from hal_uart.o(.text)
 <LI><a href="#[2f]">sys_clk_disable_uart2</a> from at6010_clock.o(.text) referenced from hal_uart.o(.text)
 <LI><a href="#[2a]">sys_clk_enable_uart0</a> from at6010_clock.o(.text) referenced from hal_uart.o(.text)
 <LI><a href="#[2b]">sys_clk_enable_uart1</a> from at6010_clock.o(.text) referenced from hal_uart.o(.text)
 <LI><a href="#[2c]">sys_clk_enable_uart2</a> from at6010_clock.o(.text) referenced from hal_uart.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[4d]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[19d]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[19e]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[4e]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[19f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[174]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[4f]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[50]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[52]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent_end
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[54]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[57]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[1a0]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[1a1]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[1a2]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[1a3]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[1a4]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[1a5]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[1a6]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[1a7]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[1a8]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[1a9]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[1aa]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[1ab]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[1ac]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[1ad]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[1ae]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[1af]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[1b0]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[1b1]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[1b2]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[1b3]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[1b4]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[5c]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[1b5]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[1b6]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[1b7]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[1b8]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[1b9]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[1ba]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[1bb]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[4c]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1bc]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[1bd]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry7.o(.ARM.Collect$$rtentry$$00000007))

<P><STRONG><a name="[56]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[1be]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[58]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; radar_fmcw_cfg &rArr; hal_radar_init &rArr; radar_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[1bf]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[18e]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5b]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[1c0]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[5d]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[d6]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_fmcw_cfg
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[1c1]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>AFC_PLL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFC_PLL_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFC_PLL_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>AUX_ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>BOR_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>CACHE_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EFUSE_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>LIGHT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>LOW_BAT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PLL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RC_CAL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1c2]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>fputc</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, retarget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>fgetc</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_byte
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_recv_byte
</UL>

<P><STRONG><a name="[18c]"></a>ferror</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[1c3]"></a>_sys_open</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[1c4]"></a>_sys_close</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[1c5]"></a>_sys_write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[1c6]"></a>_sys_read</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>_ttywrch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_byte
</UL>

<P><STRONG><a name="[1c7]"></a>_sys_istty</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[1c8]"></a>_sys_seek</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[1c9]"></a>_sys_ensure</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[1ca]"></a>_sys_flen</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[1cb]"></a>_sys_tmpnam</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[1cc]"></a>time</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>delay_us</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, retarget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_init
</UL>

<P><STRONG><a name="[65]"></a>delay_ms</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, retarget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_delay_ms
</UL>

<P><STRONG><a name="[59]"></a>main</STRONG> (Thumb, 388 bytes, Stack size 56 bytes, doppler_fft_base_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = main &rArr; radar_fmcw_cfg &rArr; hal_radar_init &rArr; radar_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data_frame_header
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_radar
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_dma
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_disable_radar
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_frame_trigger_mode_set
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_frame_start
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_fmcw_cfg
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_port_send_data
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_dma_config
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_section_start (via Veneer)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_section_end (via Veneer)
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_set
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[1cd]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system_cmsdk_cm0plus.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, system_cmsdk_cm0plus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; cache_init
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cache_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>hal_dualtimer_init</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, hal_dualtimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hal_dualtimer_init &rArr; dualtimer_set_config
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_start
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_set_config
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_get_default_config
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>hal_dualtimer_config</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, hal_dualtimer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_stop
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_set_load
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_set_config
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_set_cb
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_is_enabled
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_irq_clear
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_get_default_config
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_get
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>

<P><STRONG><a name="[85]"></a>hal_dualtimer_set_time</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, hal_dualtimer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_set_load
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_get
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>

<P><STRONG><a name="[86]"></a>hal_dualtimer_start</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hal_dualtimer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_start
</UL>

<P><STRONG><a name="[87]"></a>hal_dualtimer_stop</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hal_dualtimer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_stop
</UL>

<P><STRONG><a name="[64]"></a>hal_dualtimer_delay_us</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, hal_dualtimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_get_value
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_get
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_delay_ms
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>

<P><STRONG><a name="[66]"></a>hal_dualtimer_delay_ms</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, hal_dualtimer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[89]"></a>hal_get_start_cnt_value</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hal_dualtimer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_get_value
</UL>

<P><STRONG><a name="[8a]"></a>hal_get_elapsed_time_us</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, hal_dualtimer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_get_value
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_get
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>

<P><STRONG><a name="[8b]"></a>hal_dualtimer_deinit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hal_dualtimer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_deinit
</UL>

<P><STRONG><a name="[8d]"></a>hal_clk_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hal_clock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_ana_clk_config
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_setup_clk
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_xtal_type_get
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[91]"></a>hal_setup_clk</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, hal_clock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sys_clk_divider
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_spi_flash_clk_divider
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pll_clk_divider
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_src_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_init
</UL>

<P><STRONG><a name="[1ce]"></a>hal_get_spi_flash_clk</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_clock.o(.text), UNUSED)

<P><STRONG><a name="[101]"></a>hal_get_system_clk</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_us_to_ticks
</UL>

<P><STRONG><a name="[1cf]"></a>hal_get_xtal_type</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_clock.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>hal_setup_adc_clk</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, hal_clock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_set_adc_clk
</UL>

<P><STRONG><a name="[98]"></a>hal_ms_to_ticks</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hal_clock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>

<P><STRONG><a name="[68]"></a>hal_uart_init</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_uart_init &rArr; uart_baudrate_set
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx_fifo_clr
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_stop_bits_set
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_dma_mode
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_fifo_clr
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_parity_set
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fifo_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_data_width_set
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_baudrate_set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_dma_config
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d0]"></a>hal_uart_deinit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[1d1]"></a>hal_uart_state_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>hal_uart_send_wait</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_bs
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_status
</UL>

<P><STRONG><a name="[a5]"></a>hal_uart_recv_wait</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_recv_byte
</UL>

<P><STRONG><a name="[a6]"></a>hal_uart_transmit_dma_it</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_dr_addr
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
</UL>

<P><STRONG><a name="[a9]"></a>hal_uart_receive_dma_it</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_dr_addr
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
</UL>

<P><STRONG><a name="[aa]"></a>hal_uart_transmit_dma</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hal_uart_transmit_dma &rArr; hal_dma_start &rArr; dma_setconfig &rArr; dma_set_src_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_dr_addr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_port_send_data
</UL>

<P><STRONG><a name="[ac]"></a>hal_uart_receive_dma</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_dr_addr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start
</UL>

<P><STRONG><a name="[6d]"></a>hal_fft_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hal_fft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_fft_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_irq_callback_set
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_dev_init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d2]"></a>hal_fft_notify_set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_fft.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>hal_fft_deinit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hal_fft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_dev_deinit
</UL>

<P><STRONG><a name="[70]"></a>hal_fft_set_config</STRONG> (Thumb, 788 bytes, Stack size 56 bytes, hal_fft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = hal_fft_set_config &rArr; cfar_thr_hw_adapt &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_user_win_enable
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_user_win_cfg
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_user_fft_cfg
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_irq_enable
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_input_data_type_set
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_dc_cut_enable
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_win_enable
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_win_cfg
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_rdat_enable
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_rdat_cfg
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_2d_fft_enable
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_2d_fft_cfg
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_1d_fft_enable
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_1d_fft_cfg
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_vel_dim_cfg
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_range_dim_cfg
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_irq_enable
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_irq_callback_set
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_enable
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_det_bmap_addr_cfg
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_abs_threshold_cfg
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_rank_id_get
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ca]"></a>fft_range_fft_suspend</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hal_fft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_1d_fft_enable
</UL>

<P><STRONG><a name="[cb]"></a>fft_range_fft_resume</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hal_fft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_1d_fft_enable
</UL>

<P><STRONG><a name="[cc]"></a>fft_doppler_fft_suspend</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hal_fft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_2d_fft_enable
</UL>

<P><STRONG><a name="[cd]"></a>fft_doppler_fft_resume</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hal_fft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_2d_fft_enable
</UL>

<P><STRONG><a name="[ce]"></a>fft_process_trigger</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hal_fft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_user_fft_start
</UL>

<P><STRONG><a name="[6f]"></a>radar_fmcw_cfg</STRONG> (Thumb, 72 bytes, Stack size 336 bytes, radar_cfg_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = radar_fmcw_cfg &rArr; hal_radar_init &rArr; radar_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7]"></a>hal_radar_init</STRONG> (Thumb, 664 bytes, Stack size 192 bytes, hal_radar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = hal_radar_init &rArr; radar_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_radar
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_tx_profile_config
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_subframe_profile_config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_frame_config
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_filter_dma_cfg
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_filter_cfg
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_faston_time_set
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_chirp_profile_config
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_fmcw_cfg
</UL>

<P><STRONG><a name="[e2]"></a>hal_radar_burst_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, hal_radar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_radar
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_burst_init
</UL>

<P><STRONG><a name="[e4]"></a>hal_radar_stop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hal_radar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_pwr_off
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_frame_stop
</UL>

<P><STRONG><a name="[e7]"></a>hal_radar_start</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hal_radar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_frame_start
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_pwr_on
</UL>

<P><STRONG><a name="[e9]"></a>hal_radar_deinit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hal_radar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_disable_radar
</UL>

<P><STRONG><a name="[ea]"></a>hal_radar_lp_start</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, hal_radar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_timer_get
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_get_free
</UL>

<P><STRONG><a name="[ef]"></a>hal_radar_lp_stop</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hal_radar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_pause
</UL>

<P><STRONG><a name="[f1]"></a>hal_radar_ulp_start</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hal_radar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_ulp_init
</UL>

<P><STRONG><a name="[f3]"></a>hal_radar_ulp_stop</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hal_radar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_ulp_deinit
</UL>

<P><STRONG><a name="[1d3]"></a>hal_radar_param_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hal_radar.o(.text), UNUSED)

<P><STRONG><a name="[1d4]"></a>hal_radar_param_get</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hal_radar.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>hal_timer_init</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, hal_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_value_set
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_reload_set
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_irq_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_irq_disable
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb_set
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_timer3
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_timer2
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_timer1
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_timer0
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_us_to_ticks
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_lp_start
</UL>

<P><STRONG><a name="[102]"></a>hal_timer_deinit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, hal_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_disable_timer3
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_disable_timer2
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_disable_timer1
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_disable_timer0
</UL>

<P><STRONG><a name="[ec]"></a>hal_timer_get_free</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hal_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_lp_start
</UL>

<P><STRONG><a name="[107]"></a>hal_timer_set</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, hal_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_value_set
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_reload_set
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_irq_clear
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb_set
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_us_to_ticks
</UL>

<P><STRONG><a name="[10a]"></a>hal_timer_start</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hal_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
</UL>

<P><STRONG><a name="[10b]"></a>hal_timer_stop</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hal_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
</UL>

<P><STRONG><a name="[10c]"></a>hal_timer_value_get</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hal_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_value_get
</UL>

<P><STRONG><a name="[10e]"></a>hal_dma_init</STRONG> (Thumb, 1240 bytes, Stack size 32 bytes, hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = hal_dma_init &rArr; __assert_func &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_is_active_channel
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_enable_global
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_tfr
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_src_tran
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_error
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_dst_tran
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_block
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_channel
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_tfr
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_src_tran
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_error
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_dst_tran
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_block
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_func
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_tr_width
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_status_update_en
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_status_addr
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_realod_en
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_linked_list_en
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_handshake_type
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_handshake_polarity
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_handshake_if
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_gather_interval
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_gather_en
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_gather_cnt
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_burst_length
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_addr_inc
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_linked_list_loc
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_int_en
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_flowctrl
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_flow_control_mode
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_fifo_mode
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_tr_width
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_status_update_en
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_status_addr
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_scatter_interval
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_scatter_en
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_scatter_cnt
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_reload_en
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_linked_list_en
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_handshake_type
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_handshake_polarity
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_handshake_if
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_burst_length
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_addr_inc
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_channel_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_dma_config
</UL>

<P><STRONG><a name="[13d]"></a>hal_dma_deinit</STRONG> (Thumb, 608 bytes, Stack size 32 bytes, hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_tfr
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_src_tran
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_error
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_dst_tran
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_block
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_channel
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_tfr
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_src_tran
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_error
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_dst_tran
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_block
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_func
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_tr_width
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_status_update_en
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_realod_en
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_linked_list_en
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_handshake_type
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_handshake_polarity
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_handshake_if
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_gather_interval
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_gather_en
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_gather_cnt
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_burst_length
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_addr_inc
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_addr
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_protection_control
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_lock_channel_level
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_lock_channel
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_lock_bus_level
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_lock_bus
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_int_en
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_flowctrl
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_flow_control_mode
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_fifo_mode
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_tr_width
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_status_update_en
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_scatter_interval
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_scatter_en
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_scatter_cnt
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_reload_en
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_linked_list_en
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_handshake_type
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_handshake_polarity
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_handshake_if
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_burst_length
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_addr_inc
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_addr
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_channel_suspend
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_channel_priority
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_block_transfer_size
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[148]"></a>hal_dma_init_struct_init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_dma_init_struct_init
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_dma_config
</UL>

<P><STRONG><a name="[1d5]"></a>hal_dma_lli_struct_init</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>hal_dma_start</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hal_dma_start &rArr; dma_setconfig &rArr; dma_set_src_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_enable_channel
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_block_done_flag
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_setconfig
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_int_en
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit_dma
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_receive_dma
</UL>

<P><STRONG><a name="[14c]"></a>hal_dma_abort</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_is_active_channel
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_tfr
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_src_tran
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_error
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_block
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_channel
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_tfr
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_src_tran
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_error
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_dst_tran
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_block
</UL>

<P><STRONG><a name="[14d]"></a>hal_dma_poll_transfer</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_dma_poll_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_is_active_channel
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_get_raw_tfr
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_output_dma_done
</UL>

<P><STRONG><a name="[a8]"></a>hal_dma_start_it</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_enable_it_tfr
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_enable_it_src_tran
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_enable_it_error
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_enable_it_dst_tran
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_enable_it_block
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_enable_channel
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_tfr
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_src_tran
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_error
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_dst_tran
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_block
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_block_done_flag
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_setconfig
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_handshake_polarity
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_handshake_if
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_int_en
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_handshake_polarity
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_handshake_if
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit_dma_it
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_receive_dma_it
</UL>

<P><STRONG><a name="[154]"></a>hal_dma_aboart_it</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_channel
</UL>

<P><STRONG><a name="[155]"></a>hal_dma_irq_handler</STRONG> (Thumb, 566 bytes, Stack size 24 bytes, hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_is_enabled_it_src_tran
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_is_enabled_it_error
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_is_enabled_it_dst_tran
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_is_enabled_it_block
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_is_active_channel
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_get_status_tfr
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_get_status_src_tran
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_get_status_error
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_get_status_dst_tran
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_get_status_block
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_tfr
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_src_tran
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_error
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_dst_tran
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_block
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_channel
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_tfr
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_src_tran
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_error
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_dst_tran
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_block
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_realod_en
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_int_en
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_reload_en
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_is_enabled_it_tfr
</UL>

<P><STRONG><a name="[1d6]"></a>hal_dma_register_callbacks</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>hal_dma_unregister_callbacks</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[170]"></a>hal_dma_get_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_output_dma_done
</UL>

<P><STRONG><a name="[1d7]"></a>hal_dma_get_error</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>dualtimer_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, at6010_dualtimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dualtimer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_dualtimer
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_init
</UL>

<P><STRONG><a name="[8c]"></a>dualtimer_deinit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, at6010_dualtimer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_disable_dualtimer
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_deinit
</UL>

<P><STRONG><a name="[7a]"></a>dualtimer_get_default_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_dualtimer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_config
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_init
</UL>

<P><STRONG><a name="[7b]"></a>dualtimer_set_config</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, at6010_dualtimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dualtimer_set_config
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_config
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_init
</UL>

<P><STRONG><a name="[83]"></a>dualtimer_set_load</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dualtimer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_set_time
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_config
</UL>

<P><STRONG><a name="[7c]"></a>dualtimer_start</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dualtimer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_start
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_init
</UL>

<P><STRONG><a name="[7f]"></a>dualtimer_stop</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dualtimer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_stop
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_config
</UL>

<P><STRONG><a name="[80]"></a>dualtimer_irq_clear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dualtimer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_config
</UL>

<P><STRONG><a name="[88]"></a>dualtimer_get_value</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_dualtimer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_get_start_cnt_value
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_get_elapsed_time_us
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_delay_us
</UL>

<P><STRONG><a name="[84]"></a>dualtimer_set_cb</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_dualtimer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_config
</UL>

<P><STRONG><a name="[7e]"></a>dualtimer_is_enabled</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dualtimer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_config
</UL>

<P><STRONG><a name="[165]"></a>dualtimer_hdl_proc</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, at6010_dualtimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dualtimer_hdl_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DUALTIMER_Handler
</UL>

<P><STRONG><a name="[9c]"></a>uart_baudrate_set</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, at6010_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_baudrate_set
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_get
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_baudrate_reset
</UL>

<P><STRONG><a name="[163]"></a>uart_baudrate_reset</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, at6010_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_baudrate_set
</UL>

<P><STRONG><a name="[9d]"></a>uart_data_width_set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[9e]"></a>uart_parity_set</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, at6010_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[9f]"></a>uart_stop_bits_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[a1]"></a>uart_set_dma_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[5f]"></a>uart_send_byte</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>

<P><STRONG><a name="[a3]"></a>uart_send_bs</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, at6010_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_wait
</UL>

<P><STRONG><a name="[1d8]"></a>uart_send_str</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at6010_uart.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>uart_recv_byte</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_recv_wait
</UL>

<P><STRONG><a name="[a4]"></a>uart_get_status</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, at6010_uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_send_wait
</UL>

<P><STRONG><a name="[1d9]"></a>uart_set_hdl</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_uart.o(.text), UNUSED)

<P><STRONG><a name="[1da]"></a>uart_irq_enable</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at6010_uart.o(.text), UNUSED)

<P><STRONG><a name="[1db]"></a>uart_irq_disable</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at6010_uart.o(.text), UNUSED)

<P><STRONG><a name="[1dc]"></a>uart_isr</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, at6010_uart.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>uart_fifo_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at6010_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[9b]"></a>uart_tx_fifo_clr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[9a]"></a>uart_rx_fifo_clr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[a7]"></a>uart_get_dr_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit_dma_it
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit_dma
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_receive_dma_it
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_receive_dma
</UL>

<P><STRONG><a name="[8e]"></a>clock_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_init
</UL>

<P><STRONG><a name="[8f]"></a>clock_xtal_type_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmcw_afc_freq_set
</UL>

<P><STRONG><a name="[90]"></a>pll_ana_clk_config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_clk_init
</UL>

<P><STRONG><a name="[92]"></a>set_pll_clk_divider</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_setup_clk
</UL>

<P><STRONG><a name="[1dd]"></a>disable_pll_clk</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>clk_mcu_src_set</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_setup_clk
</UL>

<P><STRONG><a name="[94]"></a>set_sys_clk_divider</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_setup_clk
</UL>

<P><STRONG><a name="[95]"></a>set_spi_flash_clk_divider</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_setup_clk
</UL>

<P><STRONG><a name="[97]"></a>sys_clk_set_adc_clk</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_setup_adc_clk
</UL>

<P><STRONG><a name="[191]"></a>xtal_freq_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clk_dcdc_set
</UL>

<P><STRONG><a name="[67]"></a>clk_mcu_set</STRONG> (Thumb, 304 bytes, Stack size 16 bytes, at6010_clock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = clk_mcu_set
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>clk_mcu_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_get_elapsed_time_us
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_set_time
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_config
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_delay_us
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_baudrate_set
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_resume
</UL>

<P><STRONG><a name="[192]"></a>sys_clk_adc_sdm_inv_set</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, at6010_clock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_clk_adc_sdm_inv_set
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_burst_init
</UL>

<P><STRONG><a name="[6b]"></a>sys_clk_enable_radar</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_burst_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[6a]"></a>sys_clk_disable_radar</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_deinit
</UL>

<P><STRONG><a name="[161]"></a>sys_clk_enable_dualtimer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_init
</UL>

<P><STRONG><a name="[162]"></a>sys_clk_disable_dualtimer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_deinit
</UL>

<P><STRONG><a name="[1de]"></a>sys_clk_enable_gpio</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)

<P><STRONG><a name="[1df]"></a>sys_clk_disable_gpio</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)

<P><STRONG><a name="[1e0]"></a>sys_clk_enable_spi0</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)

<P><STRONG><a name="[1e1]"></a>sys_clk_enable_spi1</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)

<P><STRONG><a name="[1e2]"></a>sys_clk_disable_spi0</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)

<P><STRONG><a name="[1e3]"></a>sys_clk_disable_spi1</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>sys_clk_enable_dma</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_dma_config
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16e]"></a>sys_clk_disable_dma</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_dma_config
</UL>

<P><STRONG><a name="[1e4]"></a>sys_clk_enable_pwm</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)

<P><STRONG><a name="[1e5]"></a>sys_clk_disable_pwm</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)

<P><STRONG><a name="[1e6]"></a>sys_clk_enable_i2c</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)

<P><STRONG><a name="[1e7]"></a>sys_clk_disable_i2c</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>sys_clk_enable_uart0</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.text)
</UL>
<P><STRONG><a name="[2d]"></a>sys_clk_disable_uart0</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>sys_clk_enable_uart1</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.text)
</UL>
<P><STRONG><a name="[2e]"></a>sys_clk_disable_uart1</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>sys_clk_enable_uart2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>sys_clk_disable_uart2</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_clock.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.text)
</UL>
<P><STRONG><a name="[f5]"></a>sys_clk_enable_timer0</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[f6]"></a>sys_clk_enable_timer1</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[f7]"></a>sys_clk_enable_timer2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[f8]"></a>sys_clk_enable_timer3</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[103]"></a>sys_clk_disable_timer0</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_deinit
</UL>

<P><STRONG><a name="[104]"></a>sys_clk_disable_timer1</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_deinit
</UL>

<P><STRONG><a name="[105]"></a>sys_clk_disable_timer2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_deinit
</UL>

<P><STRONG><a name="[106]"></a>sys_clk_disable_timer3</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_deinit
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>TIMER0_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, at6010_irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER0_Handler &rArr; timer_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>TIMER1_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, at6010_irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER1_Handler &rArr; timer_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>TIMER2_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, at6010_irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER2_Handler &rArr; timer_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>TIMER3_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, at6010_irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER3_Handler &rArr; timer_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DUALTIMER_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, at6010_irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DUALTIMER_Handler &rArr; dualtimer_hdl_proc
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_hdl_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>UART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>UART1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>UART2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>SPI0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>SPI1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>I2C_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>GPIO_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>RADAR_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, at6010_irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RADAR_Handler &rArr; radar_isr &rArr; fft_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>KEY_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>GPIO0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>GPIO1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>GPIO2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>GPIO3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>GPIO4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>GPIO5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>GPIO6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>AON_WDT_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1e8]"></a>gpio_get_direction</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[168]"></a>gpio_set_direction</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, at6010_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_toggle_init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_direction_output
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_direction_input
</UL>

<P><STRONG><a name="[16d]"></a>gpio_get_value</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, at6010_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_toggle
</UL>

<P><STRONG><a name="[16a]"></a>gpio_set_value</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, at6010_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_toggle
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_direction_output
</UL>

<P><STRONG><a name="[167]"></a>gpio_direction_input</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at6010_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_direction
</UL>

<P><STRONG><a name="[169]"></a>gpio_direction_output</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, at6010_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_value
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_direction
</UL>

<P><STRONG><a name="[1e9]"></a>gpio_set_pinmux</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1ea]"></a>gpio_set_alternate_function</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1eb]"></a>gpio_set_analog_en</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1ec]"></a>gpio_set_rd_en</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1ed]"></a>gpio_set_pull_up</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1ee]"></a>gpio_set_pull_down</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>gpio_init</STRONG> (Thumb, 188 bytes, Stack size 20 bytes, at6010_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[1ef]"></a>gpio_set_irq_type</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f0]"></a>gpio_irq_hdl</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f1]"></a>gpio_isr</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f2]"></a>gpio_irq_set_hdl</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f3]"></a>gpio_irq_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f4]"></a>gpio_irq_disable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f5]"></a>gpio_irq_clr_flag</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f6]"></a>gpio_irq_get_status</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1f7]"></a>gpio_irq_rise_get_status</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_gpio.o(.text), UNUSED)

<P><STRONG><a name="[16b]"></a>gpio_toggle_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, at6010_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_direction
</UL>

<P><STRONG><a name="[16c]"></a>gpio_toggle</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, at6010_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_value
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_value
</UL>

<P><STRONG><a name="[f9]"></a>timer_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, at6010_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[fb]"></a>timer_irq_enable</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at6010_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[fc]"></a>timer_irq_disable</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at6010_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[100]"></a>timer_start</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_start
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_enter
</UL>

<P><STRONG><a name="[108]"></a>timer_stop</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_stop
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_set
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_pause
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_exit
</UL>

<P><STRONG><a name="[10d]"></a>timer_value_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_value_get
</UL>

<P><STRONG><a name="[ff]"></a>timer_value_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_set
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_resume
</UL>

<P><STRONG><a name="[1f8]"></a>timer_reload_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_timer.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>timer_reload_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_set
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_resume
</UL>

<P><STRONG><a name="[109]"></a>timer_irq_clear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_set
</UL>

<P><STRONG><a name="[1f9]"></a>timer_irq_status</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_timer.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>timer_cb_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_set
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[164]"></a>timer_isr</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, at6010_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_Handler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_Handler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_Handler
</UL>

<P><STRONG><a name="[72]"></a>output_dma_config</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, output_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = output_dma_config &rArr; hal_dma_init &rArr; __assert_func &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_dma
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_disable_dma
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init_struct_init
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>output_port_send_data</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, output_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = output_port_send_data &rArr; hal_uart_transmit_dma &rArr; hal_dma_start &rArr; dma_setconfig &rArr; dma_set_src_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit_dma
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_output_dma_done
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>write_data_frame_header</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, frame_header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = write_data_frame_header
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1fa]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[193]"></a>__aeabi_uldivmod</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, lludiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_chirp_profile_config
</UL>

<P><STRONG><a name="[1fb]"></a>_ll_udiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, lludiv.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>__2printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_func
</UL>

<P><STRONG><a name="[173]"></a>__printf</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, __printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[175]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[51]"></a>_printf_int_dec</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed (Weak Reference)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[53]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[1fc]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>puts</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, puts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = puts &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_fmcw_cfg
</UL>

<P><STRONG><a name="[d9]"></a>__aeabi_memcpy</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, rt_memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[1fd]"></a>__rt_memcpy</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[17d]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[17c]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[171]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data_frame_header
</UL>

<P><STRONG><a name="[1fe]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_unregister_callbacks
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init_struct_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[1ff]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[17e]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sys_clk_divider
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_ms_to_ticks
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_get_elapsed_time_us
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_set_time
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_config
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_set
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_delay_us
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_us_to_ticks
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_frame_interval_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_chirp_profile_config
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_baudrate_set
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_resume
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clk_dcdc_set
</UL>

<P><STRONG><a name="[200]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[201]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[202]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[203]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[204]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[205]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
</UL>

<P><STRONG><a name="[17f]"></a>_dadd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[206]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[182]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[207]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[183]"></a>_drsb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[d5]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
</UL>

<P><STRONG><a name="[208]"></a>_dfixu</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dfixui.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
</UL>

<P><STRONG><a name="[209]"></a>_f2d</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
</UL>

<P><STRONG><a name="[185]"></a>_fdiv</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[184]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[187]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[186]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>

<P><STRONG><a name="[20a]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
</UL>

<P><STRONG><a name="[20b]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[20c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[20d]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[17b]"></a>_printf_int_common</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[188]"></a>_printf_cs_common</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[18a]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[55]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[172]"></a>_printf_char_file</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[17a]"></a>__rt_udiv10</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[18b]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[5a]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[20e]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[20f]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>cache_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, at6010_cache.o(.text.cache_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cache_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[be]"></a>cfar_abs_threshold_cfg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at6010_cfar.o(.text.cfar_abs_threshold_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[bf]"></a>cfar_det_bmap_addr_cfg</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, at6010_cfar.o(.text.cfar_det_bmap_addr_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cfar_det_bmap_addr_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[c6]"></a>cfar_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_cfar.o(.text.cfar_enable))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[c8]"></a>cfar_irq_callback_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at6010_cfar.o(.text.cfar_irq_callback_set))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[c7]"></a>cfar_irq_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_cfar.o(.text.cfar_irq_enable))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[199]"></a>cfar_isr</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, at6010_cfar.o(.text.cfar_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cfar_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_isr
</UL>

<P><STRONG><a name="[bd]"></a>cfar_range_dim_cfg</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, at6010_cfar.o(.text.cfar_range_dim_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cfar_range_dim_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[bc]"></a>cfar_vel_dim_cfg</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, at6010_cfar.o(.text.cfar_vel_dim_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[14a]"></a>dma_clear_block_done_flag</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_clear_block_done_flag))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start
</UL>

<P><STRONG><a name="[118]"></a>dma_clear_it_block</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_clear_it_block))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_abort
</UL>

<P><STRONG><a name="[11b]"></a>dma_clear_it_dst_tran</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_clear_it_dst_tran))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_abort
</UL>

<P><STRONG><a name="[119]"></a>dma_clear_it_error</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_clear_it_error))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_abort
</UL>

<P><STRONG><a name="[11a]"></a>dma_clear_it_src_tran</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_clear_it_src_tran))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_abort
</UL>

<P><STRONG><a name="[117]"></a>dma_clear_it_tfr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_clear_it_tfr))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_abort
</UL>

<P><STRONG><a name="[10f]"></a>dma_disable_channel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_disable_channel))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_abort
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_aboart_it
</UL>

<P><STRONG><a name="[113]"></a>dma_disable_it_block</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_disable_it_block))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_abort
</UL>

<P><STRONG><a name="[116]"></a>dma_disable_it_dst_tran</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_disable_it_dst_tran))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[114]"></a>dma_disable_it_error</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_disable_it_error))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_abort
</UL>

<P><STRONG><a name="[115]"></a>dma_disable_it_src_tran</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_disable_it_src_tran))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_abort
</UL>

<P><STRONG><a name="[112]"></a>dma_disable_it_tfr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_disable_it_tfr))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_abort
</UL>

<P><STRONG><a name="[14b]"></a>dma_enable_channel</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_enable_channel))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start
</UL>

<P><STRONG><a name="[13b]"></a>dma_enable_global</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, at6010_dma.o(.text.dma_enable_global))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_enable_global
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[150]"></a>dma_enable_it_block</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_enable_it_block), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
</UL>

<P><STRONG><a name="[153]"></a>dma_enable_it_dst_tran</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_enable_it_dst_tran), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
</UL>

<P><STRONG><a name="[14f]"></a>dma_enable_it_error</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_enable_it_error), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
</UL>

<P><STRONG><a name="[152]"></a>dma_enable_it_src_tran</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_enable_it_src_tran), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
</UL>

<P><STRONG><a name="[151]"></a>dma_enable_it_tfr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_enable_it_tfr), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
</UL>

<P><STRONG><a name="[14e]"></a>dma_get_raw_tfr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_get_raw_tfr))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_poll_transfer
</UL>

<P><STRONG><a name="[15a]"></a>dma_get_status_block</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_get_status_block), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
</UL>

<P><STRONG><a name="[15e]"></a>dma_get_status_dst_tran</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_get_status_dst_tran), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
</UL>

<P><STRONG><a name="[156]"></a>dma_get_status_error</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_get_status_error), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
</UL>

<P><STRONG><a name="[15c]"></a>dma_get_status_src_tran</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_get_status_src_tran), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
</UL>

<P><STRONG><a name="[158]"></a>dma_get_status_tfr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_get_status_tfr), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
</UL>

<P><STRONG><a name="[110]"></a>dma_is_active_channel</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_is_active_channel))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_poll_transfer
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_abort
</UL>

<P><STRONG><a name="[15b]"></a>dma_is_enabled_it_block</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_is_enabled_it_block), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
</UL>

<P><STRONG><a name="[15f]"></a>dma_is_enabled_it_dst_tran</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_is_enabled_it_dst_tran), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
</UL>

<P><STRONG><a name="[157]"></a>dma_is_enabled_it_error</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_is_enabled_it_error), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
</UL>

<P><STRONG><a name="[15d]"></a>dma_is_enabled_it_src_tran</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_is_enabled_it_src_tran), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
</UL>

<P><STRONG><a name="[159]"></a>dma_is_enabled_it_tfr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_is_enabled_it_tfr), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
</UL>

<P><STRONG><a name="[140]"></a>dma_set_block_transfer_size</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_block_transfer_size))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_setconfig
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[12e]"></a>dma_set_channel_priority</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_channel_priority))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[146]"></a>dma_set_channel_suspend</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_channel_suspend), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[13f]"></a>dma_set_dst_addr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_addr))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_setconfig
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[124]"></a>dma_set_dst_addr_inc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_addr_inc))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[126]"></a>dma_set_dst_burst_length</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_burst_length))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[133]"></a>dma_set_dst_handshake_if</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_handshake_if))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[134]"></a>dma_set_dst_handshake_polarity</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_handshake_polarity))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[130]"></a>dma_set_dst_handshake_type</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_handshake_type))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[11e]"></a>dma_set_dst_linked_list_en</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_linked_list_en))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[120]"></a>dma_set_dst_reload_en</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_reload_en))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[12b]"></a>dma_set_dst_scatter_cnt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_scatter_cnt))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[12a]"></a>dma_set_dst_scatter_en</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_scatter_en))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[12c]"></a>dma_set_dst_scatter_interval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_scatter_interval))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[138]"></a>dma_set_dst_status_addr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_status_addr))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[136]"></a>dma_set_dst_status_update_en</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_status_update_en))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[122]"></a>dma_set_dst_tr_width</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_tr_width))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[139]"></a>dma_set_fifo_mode</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_fifo_mode))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[13a]"></a>dma_set_flow_control_mode</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_flow_control_mode))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[12d]"></a>dma_set_flowctrl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_flowctrl))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[111]"></a>dma_set_int_en</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_int_en))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[11c]"></a>dma_set_linked_list_loc</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_linked_list_loc))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[142]"></a>dma_set_lock_bus</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_lock_bus), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[144]"></a>dma_set_lock_bus_level</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_lock_bus_level), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[143]"></a>dma_set_lock_channel</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_lock_channel), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[145]"></a>dma_set_lock_channel_level</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_lock_channel_level), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[141]"></a>dma_set_protection_control</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_protection_control), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[13e]"></a>dma_set_src_addr</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at6010_dma.o(.text.dma_set_src_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_set_src_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_setconfig
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[123]"></a>dma_set_src_addr_inc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_addr_inc))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[125]"></a>dma_set_src_burst_length</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_burst_length))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[128]"></a>dma_set_src_gather_cnt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_gather_cnt))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[127]"></a>dma_set_src_gather_en</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_gather_en))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[129]"></a>dma_set_src_gather_interval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_gather_interval))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[131]"></a>dma_set_src_handshake_if</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_handshake_if))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[132]"></a>dma_set_src_handshake_polarity</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_handshake_polarity))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[12f]"></a>dma_set_src_handshake_type</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_handshake_type))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[11d]"></a>dma_set_src_linked_list_en</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_linked_list_en))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[11f]"></a>dma_set_src_realod_en</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_realod_en))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[137]"></a>dma_set_src_status_addr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_status_addr))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[135]"></a>dma_set_src_status_update_en</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_status_update_en))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[121]"></a>dma_set_src_tr_width</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_tr_width))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[c3]"></a>fft_adc_1d_fft_cfg</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, at6010_fft.o(.text.fft_adc_1d_fft_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fft_adc_1d_fft_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[c4]"></a>fft_adc_1d_fft_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_adc_1d_fft_enable))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_range_fft_suspend
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_range_fft_resume
</UL>

<P><STRONG><a name="[c5]"></a>fft_adc_2d_fft_cfg</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, at6010_fft.o(.text.fft_adc_2d_fft_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fft_adc_2d_fft_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[c9]"></a>fft_adc_2d_fft_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_adc_2d_fft_enable))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_doppler_fft_suspend
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_doppler_fft_resume
</UL>

<P><STRONG><a name="[af]"></a>fft_adc_fft_addr_set</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, at6010_fft.o(.text.fft_adc_fft_addr_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fft_adc_fft_addr_set
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_fill_this_buffer
</UL>

<P><STRONG><a name="[b0]"></a>fft_adc_rdat_addr_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_adc_rdat_addr_set))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_fill_this_buffer
</UL>

<P><STRONG><a name="[c0]"></a>fft_adc_rdat_cfg</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, at6010_fft.o(.text.fft_adc_rdat_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fft_adc_rdat_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[c1]"></a>fft_adc_rdat_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_adc_rdat_enable))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[ba]"></a>fft_adc_win_cfg</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, at6010_fft.o(.text.fft_adc_win_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fft_adc_win_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[b9]"></a>fft_adc_win_enable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_adc_win_enable))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[c2]"></a>fft_dc_cut_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_dc_cut_enable))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[b2]"></a>fft_dev_deinit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_dev_deinit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_deinit
</UL>

<P><STRONG><a name="[ad]"></a>fft_dev_init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_dev_init))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_init
</UL>

<P><STRONG><a name="[b6]"></a>fft_input_data_type_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_input_data_type_set))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[ae]"></a>fft_irq_callback_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_irq_callback_set))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_init
</UL>

<P><STRONG><a name="[b8]"></a>fft_irq_enable</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_irq_enable))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[198]"></a>fft_isr</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, at6010_fft.o(.text.fft_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fft_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_isr
</UL>

<P><STRONG><a name="[b7]"></a>fft_user_fft_cfg</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, at6010_fft.o(.text.fft_user_fft_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fft_user_fft_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[cf]"></a>fft_user_fft_start</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_user_fft_start), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_process_trigger
</UL>

<P><STRONG><a name="[b4]"></a>fft_user_win_cfg</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_user_win_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[b3]"></a>fft_user_win_enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_user_win_enable))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[18f]"></a>fmcw_afc_freq_set</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, at6010_radar.o(.text.fmcw_afc_freq_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fmcw_afc_freq_set
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_xtal_type_get
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
</UL>

<P><STRONG><a name="[190]"></a>pmu_clk_dcdc_set</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, at6010_pmu.o(.text.pmu_clk_dcdc_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pmu_clk_dcdc_set
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xtal_freq_get
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
</UL>

<P><STRONG><a name="[195]"></a>pmu_por_osc_disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_pmu.o(.text.pmu_por_osc_disable))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
</UL>

<P><STRONG><a name="[194]"></a>pmu_rf_pwr_on</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_pmu.o(.text.pmu_rf_pwr_on))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
</UL>

<P><STRONG><a name="[196]"></a>pmu_set_dig_vcore</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_pmu.o(.text.pmu_set_dig_vcore))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_init
</UL>

<P><STRONG><a name="[3a]"></a>radar_ant_rx_num_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_ant_rx_num_get))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[39]"></a>radar_ant_rx_num_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_ant_rx_num_set))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[e3]"></a>radar_burst_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at6010_radar.o(.text.radar_burst_init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_adc_sdm_inv_set
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_burst_init
</UL>

<P><STRONG><a name="[dc]"></a>radar_chirp_profile_config</STRONG> (Thumb, 300 bytes, Stack size 72 bytes, at6010_radar_frame.o(.text.radar_chirp_profile_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = radar_chirp_profile_config &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[19a]"></a>radar_deinit</STRONG> (Thumb, 224 bytes, Stack size 28 bytes, at6010_radar.o(.text.radar_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = radar_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_pwr_off
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_ulp_enter
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_enter
</UL>

<P><STRONG><a name="[df]"></a>radar_faston_time_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_faston_time_set))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[e0]"></a>radar_filter_cfg</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, at6010_radar_adc.o(.text.radar_filter_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[e1]"></a>radar_filter_dma_cfg</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, at6010_radar_adc.o(.text.radar_filter_dma_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[de]"></a>radar_frame_config</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_frame_config))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[4a]"></a>radar_frame_interval_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at6010_radar_frame.o(.text.radar_frame_interval_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = radar_frame_interval_get
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_resume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[49]"></a>radar_frame_interval_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_frame_interval_set))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[48]"></a>radar_frame_repeat_times_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_frame_repeat_times_get))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[47]"></a>radar_frame_repeat_times_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_frame_repeat_times_set))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[74]"></a>radar_frame_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_frame_start))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_start
</UL>

<P><STRONG><a name="[e5]"></a>radar_frame_stop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_frame_stop), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_stop
</UL>

<P><STRONG><a name="[73]"></a>radar_frame_trigger_mode_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_frame_trigger_mode_set))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[da]"></a>radar_init</STRONG> (Thumb, 908 bytes, Stack size 80 bytes, at6010_radar.o(.text.radar_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = radar_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_section_start (via Veneer)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_section_end (via Veneer)
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_adc_sdm_inv_set
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rx_pf_cfg
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_dig_vcore
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_rf_pwr_on
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_por_osc_disable
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clk_dcdc_set
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmcw_afc_freq_set
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[166]"></a>radar_isr</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, at6010_radar.o(.text.radar_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = radar_isr &rArr; fft_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_isr
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADAR_Handler
</UL>

<P><STRONG><a name="[ee]"></a>radar_lp_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, at6010_radar.o(.text.radar_lp_init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cb_set
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_resume
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_lp_start
</UL>

<P><STRONG><a name="[f0]"></a>radar_lp_pause</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at6010_radar.o(.text.radar_lp_pause), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_lp_stop
</UL>

<P><STRONG><a name="[19c]"></a>radar_lp_resume</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, at6010_radar.o(.text.radar_lp_resume), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_get
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_value_set
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_reload_set
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_frame_interval_get
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_init
</UL>

<P><STRONG><a name="[eb]"></a>radar_lp_timer_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_lp_timer_get), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_lp_start
</UL>

<P><STRONG><a name="[3e]"></a>radar_param_hpf1_freq_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_param_hpf1_freq_get))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[3d]"></a>radar_param_hpf1_freq_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_param_hpf1_freq_set))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[3c]"></a>radar_param_hpf1_gain_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_param_hpf1_gain_get))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[3b]"></a>radar_param_hpf1_gain_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_param_hpf1_gain_set))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[42]"></a>radar_param_hpf2_freq_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_param_hpf2_freq_get))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[41]"></a>radar_param_hpf2_freq_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_param_hpf2_freq_set))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[40]"></a>radar_param_hpf2_gain_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_param_hpf2_gain_get))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[3f]"></a>radar_param_hpf2_gain_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_param_hpf2_gain_set))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[46]"></a>radar_param_lpf_freq_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_param_lpf_freq_get))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[45]"></a>radar_param_lpf_freq_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_param_lpf_freq_set))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[44]"></a>radar_param_lpf_gain_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_param_lpf_gain_get))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[43]"></a>radar_param_lpf_gain_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_param_lpf_gain_set))
<BR>[Address Reference Count : 1]<UL><LI> hal_radar.o(.rodata.radar_param_func)
</UL>
<P><STRONG><a name="[e6]"></a>radar_rf_pwr_off</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, at6010_radar.o(.text.radar_rf_pwr_off), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_stop
</UL>

<P><STRONG><a name="[e8]"></a>radar_rf_pwr_on</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, at6010_radar.o(.text.radar_rf_pwr_on), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_start
</UL>

<P><STRONG><a name="[197]"></a>radar_rx_pf_cfg</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, at6010_radar.o(.text.radar_rx_pf_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = radar_rx_pf_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
</UL>

<P><STRONG><a name="[dd]"></a>radar_subframe_profile_config</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, at6010_radar_frame.o(.text.radar_subframe_profile_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = radar_subframe_profile_config
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[db]"></a>radar_tx_profile_config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_tx_profile_config))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[f4]"></a>radar_ulp_deinit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_ulp_deinit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_ulp_stop
</UL>

<P><STRONG><a name="[f2]"></a>radar_ulp_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at6010_radar.o(.text.radar_ulp_init), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_ulp_start
</UL>

<P><STRONG><a name="[d1]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
</UL>

<P><STRONG><a name="[210]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[75]"></a>critical_section_start</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, cpu-at601x.o(.ram_region))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init (via Veneer)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_init (via Veneer)
</UL>

<P><STRONG><a name="[76]"></a>critical_section_end</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, cpu-at601x.o(.ram_region))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init (via Veneer)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_init (via Veneer)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[28]"></a>adc_vfft_end_isr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, doppler_fft_base_main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> doppler_fft_base_main.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>adc_vfft_half_isr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, doppler_fft_base_main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> doppler_fft_base_main.o(.text)
</UL>
<P><STRONG><a name="[bb]"></a>cfar_thr_hw_adapt</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, hal_fft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = cfar_thr_hw_adapt &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[31]"></a>fft_fill_this_buffer</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hal_fft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fft_fill_this_buffer &rArr; fft_adc_fft_addr_set
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_rdat_addr_set
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_fft_addr_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_fft.o(.text)
</UL>
<P><STRONG><a name="[b5]"></a>fft_rank_id_get</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, hal_fft.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[32]"></a>invoke_cfar_callback</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hal_fft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = invoke_cfar_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_fft.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>invoke_fft_callback</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, hal_fft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = invoke_fft_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_fft.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>hal_timer_us_to_ticks</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, hal_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_get_system_clk
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_set
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_init
</UL>

<P><STRONG><a name="[13c]"></a>__assert_func</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __assert_func &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_deinit
</UL>

<P><STRONG><a name="[149]"></a>dma_setconfig</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dma_setconfig &rArr; dma_set_src_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_addr
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_addr
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_block_transfer_size
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start_it
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_start
</UL>

<P><STRONG><a name="[16f]"></a>wait_output_dma_done</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, output_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wait_output_dma_done &rArr; hal_dma_poll_transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_poll_transfer
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_get_state
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_port_send_data
</UL>

<P><STRONG><a name="[35]"></a>cache_flush</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_cache.o(.text.cache_flush))
<BR>[Address Reference Count : 1]<UL><LI> at6010_cache.o(.text.cache_init)
</UL>
<P><STRONG><a name="[36]"></a>radar_lp_enter</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, at6010_radar.o(.text.radar_lp_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = radar_lp_enter &rArr; radar_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_deinit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at6010_radar.o(.text.radar_lp_init)
</UL>
<P><STRONG><a name="[37]"></a>radar_lp_exit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at6010_radar.o(.text.radar_lp_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = radar_lp_exit &rArr; radar_rf_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at6010_radar.o(.text.radar_lp_init)
</UL>
<P><STRONG><a name="[19b]"></a>radar_rf_init</STRONG> (Thumb, 456 bytes, Stack size 32 bytes, at6010_radar.o(.text.radar_rf_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = radar_rf_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_section_start (via Veneer)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_section_end (via Veneer)
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_dig_vcore
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_pwr_on
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_lp_exit
</UL>

<P><STRONG><a name="[38]"></a>radar_ulp_enter</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, at6010_radar.o(.text.radar_ulp_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = radar_ulp_enter &rArr; radar_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_deinit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at6010_radar.o(.text.radar_ulp_init)
</UL>
<P><STRONG><a name="[181]"></a>_dadd1</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[180]"></a>_dsub1</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[34]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[18d]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[189]"></a>_printf_mbtowc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[177]"></a>_printf_post_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[176]"></a>_printf_pre_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[178]"></a>_printf_truncate_signed</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[179]"></a>_printf_truncate_unsigned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<HR></body></html>
