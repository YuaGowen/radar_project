<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out\rawdata_base.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out\rawdata_base.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6120001: Last Updated: Sat Jun  7 18:21:15 2025
<BR><P>
<H3>Maximum Stack Usage =        672 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; radar_fmcw_cfg &rArr; hal_radar_init &rArr; radar_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1d]">AFC_PLL_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">AFC_PLL_Handler</a><BR>
 <LI><a href="#[4d]">_sys_exit</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4d]">_sys_exit</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1d]">AFC_PLL_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[28]">AON_WDT_Handler</a> from at6010_irq.o(.text.AON_WDT_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[1c]">AUX_ADC_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[20]">BOR_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[15]">CACHE_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[16]">DMA_Handler</a> from at6010_irq.o(.text.DMA_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[d]">DUALTIMER_Handler</a> from at6010_irq.o(.text.DUALTIMER_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[1b]">EFUSE_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[21]">GPIO0_Handler</a> from at6010_irq.o(.text.GPIO0_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[22]">GPIO1_Handler</a> from at6010_irq.o(.text.GPIO1_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[23]">GPIO2_Handler</a> from at6010_irq.o(.text.GPIO2_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[24]">GPIO3_Handler</a> from at6010_irq.o(.text.GPIO3_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[25]">GPIO4_Handler</a> from at6010_irq.o(.text.GPIO4_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[26]">GPIO5_Handler</a> from at6010_irq.o(.text.GPIO5_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[27]">GPIO6_Handler</a> from at6010_irq.o(.text.GPIO6_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[14]">GPIO_Handler</a> from at6010_irq.o(.text.GPIO_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from at6010_irq.o(.text.HardFault_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[13]">I2C_Handler</a> from at6010_irq.o(.text.I2C_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[1a]">KEY_Handler</a> from at6010_irq.o(.text.KEY_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[1e]">LIGHT_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[1f]">LOW_BAT_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from at6010_irq.o(.text.NMI_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[19]">PLL_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[7]">PendSV_Handler</a> from at6010_irq.o(.text.PendSV_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[17]">RADAR_Handler</a> from at6010_irq.o(.text.RADAR_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[18]">RC_CAL_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_cmsdk_cm0plus.o(.text) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[11]">SPI0_Handler</a> from at6010_irq.o(.text.SPI0_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[12]">SPI1_Handler</a> from at6010_irq.o(.text.SPI1_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from at6010_irq.o(.text.SVC_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[8]">SysTick_Handler</a> from at6010_irq.o(.ram_region) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[29]">SystemInit</a> from system_cmsdk_cm0plus.o(.text.SystemInit) referenced from startup_cmsdk_cm0plus.o(.text)
 <LI><a href="#[9]">TIMER0_Handler</a> from at6010_irq.o(.text.TIMER0_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[a]">TIMER1_Handler</a> from at6010_irq.o(.text.TIMER1_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[b]">TIMER2_Handler</a> from at6010_irq.o(.text.TIMER2_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[c]">TIMER3_Handler</a> from at6010_irq.o(.text.TIMER3_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[e]">UART0_Handler</a> from at6010_irq.o(.text.UART0_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[f]">UART1_Handler</a> from at6010_irq.o(.text.UART1_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[10]">UART2_Handler</a> from at6010_irq.o(.text.UART2_Handler) referenced from startup_cmsdk_cm0plus.o(RESET)
 <LI><a href="#[2a]">__main</a> from __main.o(!!!main) referenced from startup_cmsdk_cm0plus.o(.text)
 <LI><a href="#[34]">_printf_fp_dec_real</a> from _printf_fp_dec.o(.text) referenced from printf1.o(x$fpl$printf1)
 <LI><a href="#[2c]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[0]">adc_rdat_end_isr</a> from rawdata_base_main.o(.ram_region) referenced 2 times from rawdata_base_main.o(.data.GtIfSampleCfg)
 <LI><a href="#[2d]">cache_flush</a> from at6010_cache.o(.text.cache_flush) referenced from at6010_cache.o(.text.cache_init)
 <LI><a href="#[2f]">fft_fill_this_buffer</a> from hal_fft.o(.text.fft_fill_this_buffer) referenced from hal_fft.o(.text.hal_fft_set_config)
 <LI><a href="#[2b]">fputc</a> from retarget.o(.text.fputc) referenced from _printf_char_file.o(.text)
 <LI><a href="#[30]">invoke_cfar_callback</a> from hal_fft.o(.text.invoke_cfar_callback) referenced from hal_fft.o(.text.hal_fft_set_config)
 <LI><a href="#[2e]">invoke_fft_callback</a> from hal_fft.o(.text.invoke_fft_callback) referenced from hal_fft.o(.text.hal_fft_init)
 <LI><a href="#[1]">rangeFftIsr</a> from rawdata_base_main.o(.ram_region) referenced 2 times from rawdata_base_main.o(.data.GtRangeCfg)
 <LI><a href="#[31]">sys_clk_enable_uart0</a> from at6010_clock.o(.text.sys_clk_enable_uart0) referenced from hal_uart.o(.text.hal_uart_init)
 <LI><a href="#[32]">sys_clk_enable_uart1</a> from at6010_clock.o(.text.sys_clk_enable_uart1) referenced from hal_uart.o(.text.hal_uart_init)
 <LI><a href="#[33]">sys_clk_enable_uart2</a> from at6010_clock.o(.text.sys_clk_enable_uart2) referenced from hal_uart.o(.text.hal_uart_init)
 <LI><a href="#[2]">velocFftIsr</a> from rawdata_base_main.o(.ram_region) referenced 2 times from rawdata_base_main.o(.data.GtVelocCfg)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2a]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(.text)
</UL>
<P><STRONG><a name="[35]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[37]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[147]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[148]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[38]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[149]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[59]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[39]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_d &rArr; _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[3a]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[3c]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[3e]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent_end
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
</UL>

<P><STRONG><a name="[3f]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[46]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[14a]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[14b]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[41]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[14c]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[14d]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[14e]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[14f]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[150]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[151]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[43]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[152]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[153]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[154]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[155]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[156]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[157]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[158]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[159]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[15a]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[15b]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[15c]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[15d]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[15e]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[4b]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[15f]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[160]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[161]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[162]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[163]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[164]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[165]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[36]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[166]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[167]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry7.o(.ARM.Collect$$rtentry$$00000007))

<P><STRONG><a name="[45]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[168]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[47]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; radar_fmcw_cfg &rArr; hal_radar_init &rArr; radar_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[169]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[8a]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[4a]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[16a]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[4c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_fmcw_cfg
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[16b]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>AFC_PLL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFC_PLL_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFC_PLL_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>AUX_ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>BOR_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>CACHE_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EFUSE_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>LIGHT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>LOW_BAT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>PLL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>RC_CAL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[16c]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_cmsdk_cm0plus.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[126]"></a>__aeabi_uldivmod</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, lludiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_chirp_profile_config
</UL>

<P><STRONG><a name="[16e]"></a>_ll_udiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, lludiv.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>__2printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findVbMaxMagnitudeIndex
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findMaxMagnitudeIndex
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAngleStatue
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPeaks
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_func
</UL>

<P><STRONG><a name="[50]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[3d]"></a>_printf_int_dec</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[57]"></a>__printf</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, __printf_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[5a]"></a>puts</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, puts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = puts &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_fmcw_cfg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findVbMaxMagnitudeIndex
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findMaxMagnitudeIndex
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_memcpy</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, rt_memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[16f]"></a>__rt_memcpy</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[5d]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data_frame_header
</UL>

<P><STRONG><a name="[170]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init_struct_init
</UL>

<P><STRONG><a name="[121]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_delay_us
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_set
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_baudrate_set
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_chirp_profile_config
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clk_dcdc_set
</UL>

<P><STRONG><a name="[171]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[172]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[173]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[174]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[175]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findMaxMagnitudeIndex
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAngleStatue
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;complexMagnitude
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocalHeadTailCalc
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiffCalc
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[61]"></a>_dadd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAngleStatue
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocalHeadTailCalc
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiffCalc
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[64]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[13f]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[65]"></a>_drsb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAngleStatue
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiffCalc
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[67]"></a>_ddiv</STRONG> (Thumb, 1072 bytes, Stack size 64 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL>

<P><STRONG><a name="[66]"></a>_drdiv</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
</UL>

<P><STRONG><a name="[176]"></a>_dfixu</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dfixui.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAngleStatue
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;complexMagnitude
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPeaks
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiffCalc
</UL>

<P><STRONG><a name="[177]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPeaks
</UL>

<P><STRONG><a name="[178]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findMaxMagnitudeIndex
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAngleStatue
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;complexMagnitude
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPeaks
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocalHeadTailCalc
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[179]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
</UL>

<P><STRONG><a name="[17a]"></a>_f2d</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
</UL>

<P><STRONG><a name="[6c]"></a>_fdiv</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[6b]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>

<P><STRONG><a name="[17b]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
</UL>

<P><STRONG><a name="[17c]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[17d]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[17e]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[72]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[56]"></a>_printf_int_common</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[34]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(x$fpl$printf1)
</UL>
<P><STRONG><a name="[7b]"></a>_printf_cs_common</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[7d]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[40]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[4f]"></a>_printf_char_file</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[55]"></a>__rt_udiv10</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[135]"></a>__ARM_scalbn</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, dscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[142]"></a>_dsqrt</STRONG> (Thumb, 248 bytes, Stack size 20 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[42]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[17f]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[180]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>_ll_udiv10</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[7e]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[7a]"></a>_printf_fp_infnan</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _printf_fp_infnan
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[74]"></a>_btod_etento</STRONG> (Thumb, 210 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[75]"></a>_btod_d2e</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _btod_d2e
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[77]"></a>_btod_emul</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _btod_emul &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_mul
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[83]"></a>_btod_emuld</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, btod.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_mul
</UL>

<P><STRONG><a name="[76]"></a>_btod_ediv</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _btod_ediv &rArr; btod_internal_div
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_div
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[85]"></a>_btod_edivd</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, btod.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_div
</UL>

<P><STRONG><a name="[86]"></a>__fpl_dcmp_InfNaN</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, dcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[49]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[143]"></a>strcmp</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[87]"></a>__fpl_cmpreturn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cmpret.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>

<P><STRONG><a name="[88]"></a>__fpl_dcheck_NaN2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[8b]"></a>__fpl_return_NaN</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, retnan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[181]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[182]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>AON_WDT_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.AON_WDT_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.DMA_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DUALTIMER_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, at6010_irq.o(.text.DUALTIMER_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DUALTIMER_Handler &rArr; dualtimer_hdl_proc
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_hdl_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>DiffCalc</STRONG> (Thumb, 404 bytes, Stack size 88 bytes, rawdata_base_main.o(.text.DiffCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DiffCalc &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findMaxMagnitudeIndex
</UL>

<P><STRONG><a name="[21]"></a>GPIO0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.GPIO0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>GPIO1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.GPIO1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>GPIO2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.GPIO2_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>GPIO3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.GPIO3_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>GPIO4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.GPIO4_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>GPIO5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.GPIO5_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>GPIO6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.GPIO6_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GPIO_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.GPIO_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>I2C_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.I2C_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>KEY_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.KEY_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>LocalHeadTailCalc</STRONG> (Thumb, 852 bytes, Stack size 144 bytes, rawdata_base_main.o(.text.LocalHeadTailCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = LocalHeadTailCalc &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmplt
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findMaxMagnitudeIndex
</UL>

<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>PrintPeaks</STRONG> (Thumb, 232 bytes, Stack size 120 bytes, rawdata_base_main.o(.text.PrintPeaks))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = PrintPeaks &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17]"></a>RADAR_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, at6010_irq.o(.text.RADAR_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RADAR_Handler &rArr; radar_isr &rArr; fft_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.SPI0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SPI1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.SPI1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SystemInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, system_cmsdk_cm0plus.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; cache_init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cache_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(.text)
</UL>
<P><STRONG><a name="[9]"></a>TIMER0_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, at6010_irq.o(.text.TIMER0_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER0_Handler &rArr; timer_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>TIMER1_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, at6010_irq.o(.text.TIMER1_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER1_Handler &rArr; timer_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>TIMER2_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, at6010_irq.o(.text.TIMER2_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER2_Handler &rArr; timer_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TIMER3_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, at6010_irq.o(.text.TIMER3_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER3_Handler &rArr; timer_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>UART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.UART0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UART1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.UART1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UART2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at6010_irq.o(.text.UART2_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, retarget.o(.text._sys_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[99]"></a>cache_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, at6010_cache.o(.text.cache_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cache_init
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[f9]"></a>cfar_abs_threshold_cfg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at6010_cfar.o(.text.cfar_abs_threshold_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[fa]"></a>cfar_det_bmap_addr_cfg</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, at6010_cfar.o(.text.cfar_det_bmap_addr_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cfar_det_bmap_addr_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[101]"></a>cfar_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_cfar.o(.text.cfar_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[103]"></a>cfar_irq_callback_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at6010_cfar.o(.text.cfar_irq_callback_set))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[102]"></a>cfar_irq_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_cfar.o(.text.cfar_irq_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[12f]"></a>cfar_isr</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, at6010_cfar.o(.text.cfar_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cfar_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_isr
</UL>

<P><STRONG><a name="[f8]"></a>cfar_range_dim_cfg</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, at6010_cfar.o(.text.cfar_range_dim_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cfar_range_dim_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[f7]"></a>cfar_vel_dim_cfg</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, at6010_cfar.o(.text.cfar_vel_dim_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[e5]"></a>clk_mcu_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_clock.o(.text.clk_mcu_get))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_delay_us
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_baudrate_set
</UL>

<P><STRONG><a name="[a1]"></a>clk_mcu_set</STRONG> (Thumb, 304 bytes, Stack size 16 bytes, at6010_clock.o(.text.clk_mcu_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = clk_mcu_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[119]"></a>clock_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_clock.o(.text.clock_init))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>clock_xtal_type_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at6010_clock.o(.text.clock_xtal_type_get))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmcw_afc_freq_set
</UL>

<P><STRONG><a name="[a3]"></a>complexMagnitude</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, rawdata_base_main.o(.text.complexMagnitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = complexMagnitude &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findVbMaxMagnitudeIndex
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findMaxMagnitudeIndex
</UL>

<P><STRONG><a name="[a5]"></a>delay_us</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, retarget.o(.text.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_init
</UL>

<P><STRONG><a name="[bf]"></a>dma_clear_it_block</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_clear_it_block))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[c2]"></a>dma_clear_it_dst_tran</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_clear_it_dst_tran))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[c0]"></a>dma_clear_it_error</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_clear_it_error))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[c1]"></a>dma_clear_it_src_tran</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_clear_it_src_tran))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[be]"></a>dma_clear_it_tfr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_clear_it_tfr))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[b6]"></a>dma_disable_channel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_disable_channel))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[ba]"></a>dma_disable_it_block</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_disable_it_block))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[bd]"></a>dma_disable_it_dst_tran</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_disable_it_dst_tran))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[bb]"></a>dma_disable_it_error</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_disable_it_error))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[bc]"></a>dma_disable_it_src_tran</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_disable_it_src_tran))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[b9]"></a>dma_disable_it_tfr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_disable_it_tfr))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[e2]"></a>dma_enable_global</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, at6010_dma.o(.text.dma_enable_global))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_enable_global
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[b7]"></a>dma_is_active_channel</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_is_active_channel))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[d5]"></a>dma_set_channel_priority</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_channel_priority))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[cb]"></a>dma_set_dst_addr_inc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_addr_inc))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[cd]"></a>dma_set_dst_burst_length</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_burst_length))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[da]"></a>dma_set_dst_handshake_if</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_handshake_if))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[db]"></a>dma_set_dst_handshake_polarity</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_handshake_polarity))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[d7]"></a>dma_set_dst_handshake_type</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_handshake_type))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[c5]"></a>dma_set_dst_linked_list_en</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_linked_list_en))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[c7]"></a>dma_set_dst_reload_en</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_reload_en))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[d2]"></a>dma_set_dst_scatter_cnt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_scatter_cnt))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[d1]"></a>dma_set_dst_scatter_en</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_scatter_en))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[d3]"></a>dma_set_dst_scatter_interval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_scatter_interval))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[df]"></a>dma_set_dst_status_addr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_status_addr))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[dd]"></a>dma_set_dst_status_update_en</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_status_update_en))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[c9]"></a>dma_set_dst_tr_width</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_dst_tr_width))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[e0]"></a>dma_set_fifo_mode</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_fifo_mode))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[e1]"></a>dma_set_flow_control_mode</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_flow_control_mode))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[d4]"></a>dma_set_flowctrl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_flowctrl))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[b8]"></a>dma_set_int_en</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_int_en))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[c3]"></a>dma_set_linked_list_loc</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_linked_list_loc))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[ca]"></a>dma_set_src_addr_inc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_addr_inc))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[cc]"></a>dma_set_src_burst_length</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_burst_length))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[cf]"></a>dma_set_src_gather_cnt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_gather_cnt))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[ce]"></a>dma_set_src_gather_en</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_gather_en))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[d0]"></a>dma_set_src_gather_interval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_gather_interval))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[d8]"></a>dma_set_src_handshake_if</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_handshake_if))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[d9]"></a>dma_set_src_handshake_polarity</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_handshake_polarity))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[d6]"></a>dma_set_src_handshake_type</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_handshake_type))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[c4]"></a>dma_set_src_linked_list_en</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_linked_list_en))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[c6]"></a>dma_set_src_realod_en</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_realod_en))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[de]"></a>dma_set_src_status_addr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_status_addr))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[dc]"></a>dma_set_src_status_update_en</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_status_update_en))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[c8]"></a>dma_set_src_tr_width</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_dma.o(.text.dma_set_src_tr_width))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[e8]"></a>dualtimer_get_default_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_dualtimer.o(.text.dualtimer_get_default_config))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_init
</UL>

<P><STRONG><a name="[e6]"></a>dualtimer_get_value</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_dualtimer.o(.text.dualtimer_get_value))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_delay_us
</UL>

<P><STRONG><a name="[8c]"></a>dualtimer_hdl_proc</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, at6010_dualtimer.o(.text.dualtimer_hdl_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dualtimer_hdl_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DUALTIMER_Handler
</UL>

<P><STRONG><a name="[a7]"></a>dualtimer_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, at6010_dualtimer.o(.text.dualtimer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dualtimer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_dualtimer
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_init
</UL>

<P><STRONG><a name="[e9]"></a>dualtimer_set_config</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, at6010_dualtimer.o(.text.dualtimer_set_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dualtimer_set_config
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_init
</UL>

<P><STRONG><a name="[ea]"></a>dualtimer_start</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_dualtimer.o(.text.dualtimer_start))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_init
</UL>

<P><STRONG><a name="[7f]"></a>ferror</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget.o(.text.ferror))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[fe]"></a>fft_adc_1d_fft_cfg</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, at6010_fft.o(.text.fft_adc_1d_fft_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fft_adc_1d_fft_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[ff]"></a>fft_adc_1d_fft_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_adc_1d_fft_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[100]"></a>fft_adc_2d_fft_cfg</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, at6010_fft.o(.text.fft_adc_2d_fft_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fft_adc_2d_fft_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[104]"></a>fft_adc_2d_fft_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_adc_2d_fft_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[a9]"></a>fft_adc_fft_addr_set</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, at6010_fft.o(.text.fft_adc_fft_addr_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fft_adc_fft_addr_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_fill_this_buffer
</UL>

<P><STRONG><a name="[aa]"></a>fft_adc_rdat_addr_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_adc_rdat_addr_set))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_fill_this_buffer
</UL>

<P><STRONG><a name="[fb]"></a>fft_adc_rdat_cfg</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, at6010_fft.o(.text.fft_adc_rdat_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fft_adc_rdat_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[fc]"></a>fft_adc_rdat_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_adc_rdat_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[f6]"></a>fft_adc_win_cfg</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, at6010_fft.o(.text.fft_adc_win_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fft_adc_win_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[f5]"></a>fft_adc_win_enable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_adc_win_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[fd]"></a>fft_dc_cut_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_dc_cut_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[ec]"></a>fft_dev_init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_dev_init))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_init
</UL>

<P><STRONG><a name="[f2]"></a>fft_input_data_type_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_input_data_type_set))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[ed]"></a>fft_irq_callback_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_irq_callback_set))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_init
</UL>

<P><STRONG><a name="[f4]"></a>fft_irq_enable</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_irq_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[12e]"></a>fft_isr</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, at6010_fft.o(.text.fft_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fft_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_isr
</UL>

<P><STRONG><a name="[ab]"></a>fft_process_trigger</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hal_fft.o(.text.fft_process_trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fft_process_trigger
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_user_fft_start
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rangeFftIsr (via Veneer)
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_rdat_handle (via Veneer)
</UL>

<P><STRONG><a name="[f3]"></a>fft_user_fft_cfg</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, at6010_fft.o(.text.fft_user_fft_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fft_user_fft_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[ac]"></a>fft_user_fft_start</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_user_fft_start))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_process_trigger
</UL>

<P><STRONG><a name="[f0]"></a>fft_user_win_cfg</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_user_win_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[ef]"></a>fft_user_win_enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_fft.o(.text.fft_user_win_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[ad]"></a>findAngleStatue</STRONG> (Thumb, 512 bytes, Stack size 20 bytes, rawdata_base_main.o(.text.findAngleStatue))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = findAngleStatue &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmplt
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b0]"></a>findMaxMagnitudeIndex</STRONG> (Thumb, 672 bytes, Stack size 20 bytes, rawdata_base_main.o(.text.findMaxMagnitudeIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = findMaxMagnitudeIndex &rArr; LocalHeadTailCalc &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;complexMagnitude
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocalHeadTailCalc
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiffCalc
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b1]"></a>findVbMaxMagnitudeIndex</STRONG> (Thumb, 460 bytes, Stack size 20 bytes, rawdata_base_main.o(.text.findVbMaxMagnitudeIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + Unknown Stack Size
<LI>Call Chain = findVbMaxMagnitudeIndex &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;complexMagnitude
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b2]"></a>fmcw_afc_freq_set</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, at6010_radar.o(.text.fmcw_afc_freq_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fmcw_afc_freq_set
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_xtal_type_get
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
</UL>

<P><STRONG><a name="[2b]"></a>fputc</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, retarget.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[110]"></a>gpio_init</STRONG> (Thumb, 188 bytes, Stack size 20 bytes, at6010_gpio.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[b5]"></a>hal_dma_init</STRONG> (Thumb, 1240 bytes, Stack size 32 bytes, hal_dma.o(.text.hal_dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = hal_dma_init &rArr; __assert_func &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_tr_width
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_status_update_en
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_status_addr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_realod_en
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_linked_list_en
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_handshake_type
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_handshake_polarity
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_handshake_if
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_gather_interval
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_gather_en
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_gather_cnt
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_burst_length
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_src_addr_inc
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_linked_list_loc
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_int_en
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_flowctrl
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_flow_control_mode
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_fifo_mode
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_tr_width
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_status_update_en
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_status_addr
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_scatter_interval
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_scatter_en
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_scatter_cnt
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_reload_en
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_linked_list_en
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_handshake_type
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_handshake_polarity
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_handshake_if
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_burst_length
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_dst_addr_inc
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_channel_priority
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_is_active_channel
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_enable_global
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_tfr
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_src_tran
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_error
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_dst_tran
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_it_block
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable_channel
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_tfr
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_src_tran
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_error
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_dst_tran
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_clear_it_block
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_func
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_dma_config
</UL>

<P><STRONG><a name="[e3]"></a>hal_dma_init_struct_init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, hal_dma.o(.text.hal_dma_init_struct_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_dma_init_struct_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_dma_config
</UL>

<P><STRONG><a name="[a6]"></a>hal_dualtimer_delay_us</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, hal_dualtimer.o(.text.hal_dualtimer_delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_get
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_get_value
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>

<P><STRONG><a name="[e7]"></a>hal_dualtimer_init</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, hal_dualtimer.o(.text.hal_dualtimer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hal_dualtimer_init &rArr; dualtimer_set_config
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_start
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_set_config
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_get_default_config
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eb]"></a>hal_fft_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hal_fft.o(.text.hal_fft_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_fft_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_irq_callback_set
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_dev_init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ee]"></a>hal_fft_set_config</STRONG> (Thumb, 788 bytes, Stack size 56 bytes, hal_fft.o(.text.hal_fft_set_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = hal_fft_set_config &rArr; cfar_thr_hw_adapt &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_user_win_enable
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_user_win_cfg
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_user_fft_cfg
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_irq_enable
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_input_data_type_set
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_dc_cut_enable
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_win_enable
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_win_cfg
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_rdat_enable
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_rdat_cfg
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_2d_fft_enable
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_2d_fft_cfg
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_1d_fft_enable
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_1d_fft_cfg
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_vel_dim_cfg
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_range_dim_cfg
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_irq_enable
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_irq_callback_set
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_enable
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_det_bmap_addr_cfg
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_abs_threshold_cfg
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_rank_id_get
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rangeFftIsr (via Veneer)
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_rdat_handle (via Veneer)
</UL>

<P><STRONG><a name="[105]"></a>hal_radar_init</STRONG> (Thumb, 664 bytes, Stack size 192 bytes, hal_radar.o(.text.hal_radar_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = hal_radar_init &rArr; radar_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_radar
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_tx_profile_config
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_subframe_profile_config
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_frame_config
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_filter_dma_cfg
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_filter_cfg
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_faston_time_set
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_chirp_profile_config
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_fmcw_cfg
</UL>

<P><STRONG><a name="[10f]"></a>hal_uart_init</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, hal_uart.o(.text.hal_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_uart_init &rArr; uart_baudrate_set
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx_fifo_clr
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_stop_bits_set
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_dma_mode
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_fifo_clr
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_parity_set
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fifo_init
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_data_width_set
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_baudrate_set
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_dma_config
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>main</STRONG> (Thumb, 416 bytes, Stack size 32 bytes, rawdata_base_main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = main &rArr; radar_fmcw_cfg &rArr; hal_radar_init &rArr; radar_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data_frame_header
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_radar
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_dma
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_disable_radar
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_pwr_on
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_frame_trigger_mode_set
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_frame_start
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_fmcw_cfg
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_dma_config
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dualtimer_init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findVbMaxMagnitudeIndex
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findMaxMagnitudeIndex
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAngleStatue
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_set
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_get
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPeaks
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[11c]"></a>output_dma_config</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, output_config.o(.text.output_dma_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = output_dma_config &rArr; hal_dma_init &rArr; __assert_func &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_enable_dma
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init_struct_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_disable_dma
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[124]"></a>pmu_clk_dcdc_set</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, at6010_pmu.o(.text.pmu_clk_dcdc_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pmu_clk_dcdc_set
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xtal_freq_get
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
</UL>

<P><STRONG><a name="[129]"></a>pmu_por_osc_disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_pmu.o(.text.pmu_por_osc_disable))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
</UL>

<P><STRONG><a name="[128]"></a>pmu_rf_pwr_on</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_pmu.o(.text.pmu_rf_pwr_on))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
</UL>

<P><STRONG><a name="[12b]"></a>pmu_set_dig_vcore</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_pmu.o(.text.pmu_set_dig_vcore))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_init
</UL>

<P><STRONG><a name="[109]"></a>radar_chirp_profile_config</STRONG> (Thumb, 300 bytes, Stack size 72 bytes, at6010_radar_frame.o(.text.radar_chirp_profile_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = radar_chirp_profile_config &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[132]"></a>radar_deinit</STRONG> (Thumb, 224 bytes, Stack size 28 bytes, at6010_radar.o(.text.radar_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = radar_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_pwr_off
</UL>

<P><STRONG><a name="[10c]"></a>radar_faston_time_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_faston_time_set))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[10d]"></a>radar_filter_cfg</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, at6010_radar_adc.o(.text.radar_filter_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[10e]"></a>radar_filter_dma_cfg</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, at6010_radar_adc.o(.text.radar_filter_dma_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[11e]"></a>radar_fmcw_cfg</STRONG> (Thumb, 72 bytes, Stack size 336 bytes, radar_cfg_hal.o(.text.radar_fmcw_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = radar_fmcw_cfg &rArr; hal_radar_init &rArr; radar_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10b]"></a>radar_frame_config</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_frame_config))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[120]"></a>radar_frame_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_frame_start))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11f]"></a>radar_frame_trigger_mode_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_frame_trigger_mode_set))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[107]"></a>radar_init</STRONG> (Thumb, 908 bytes, Stack size 80 bytes, at6010_radar.o(.text.radar_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = radar_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clk_adc_sdm_inv_set
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_section_start (via Veneer)
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_section_end (via Veneer)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rx_pf_cfg
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_dig_vcore
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_rf_pwr_on
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_por_osc_disable
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clk_dcdc_set
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmcw_afc_freq_set
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[98]"></a>radar_isr</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, at6010_radar.o(.text.radar_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = radar_isr &rArr; fft_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_isr
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADAR_Handler
</UL>

<P><STRONG><a name="[131]"></a>radar_rf_pwr_off</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, at6010_radar.o(.text.radar_rf_pwr_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = radar_rf_pwr_off &rArr; radar_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_rdat_handle (via Veneer)
</UL>

<P><STRONG><a name="[122]"></a>radar_rf_pwr_on</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, at6010_radar.o(.text.radar_rf_pwr_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = radar_rf_pwr_on &rArr; radar_rf_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12d]"></a>radar_rx_pf_cfg</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, at6010_radar.o(.text.radar_rx_pf_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = radar_rx_pf_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
</UL>

<P><STRONG><a name="[10a]"></a>radar_subframe_profile_config</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, at6010_radar_frame.o(.text.radar_subframe_profile_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = radar_subframe_profile_config
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[108]"></a>radar_tx_profile_config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_radar_frame.o(.text.radar_tx_profile_config))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
</UL>

<P><STRONG><a name="[127]"></a>sys_clk_adc_sdm_inv_set</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, at6010_clock.o(.text.sys_clk_adc_sdm_inv_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_clk_adc_sdm_inv_set
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init
</UL>

<P><STRONG><a name="[123]"></a>sys_clk_disable_dma</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text.sys_clk_disable_dma))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_dma_config
</UL>

<P><STRONG><a name="[11a]"></a>sys_clk_disable_radar</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_clock.o(.text.sys_clk_disable_radar))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11b]"></a>sys_clk_enable_dma</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text.sys_clk_enable_dma))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_dma_config
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>sys_clk_enable_dualtimer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text.sys_clk_enable_dualtimer))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dualtimer_init
</UL>

<P><STRONG><a name="[106]"></a>sys_clk_enable_radar</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text.sys_clk_enable_radar))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_radar_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>sys_clk_enable_uart0</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text.sys_clk_enable_uart0))
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.text.hal_uart_init)
</UL>
<P><STRONG><a name="[32]"></a>sys_clk_enable_uart1</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text.sys_clk_enable_uart1))
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.text.hal_uart_init)
</UL>
<P><STRONG><a name="[33]"></a>sys_clk_enable_uart2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_clock.o(.text.sys_clk_enable_uart2))
<BR>[Address Reference Count : 1]<UL><LI> hal_uart.o(.text.hal_uart_init)
</UL>
<P><STRONG><a name="[9a]"></a>timer_isr</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, at6010_timer.o(.text.timer_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_Handler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_Handler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_Handler
</UL>

<P><STRONG><a name="[113]"></a>uart_baudrate_set</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, at6010_uart.o(.text.uart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_baudrate_set
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_mcu_get
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[114]"></a>uart_data_width_set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_uart.o(.text.uart_data_width_set))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[117]"></a>uart_fifo_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at6010_uart.o(.text.uart_fifo_init))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[115]"></a>uart_parity_set</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, at6010_uart.o(.text.uart_parity_set))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[111]"></a>uart_rx_fifo_clr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_uart.o(.text.uart_rx_fifo_clr))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[b4]"></a>uart_send_byte</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_uart.o(.text.uart_send_byte))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[118]"></a>uart_set_dma_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_uart.o(.text.uart_set_dma_mode))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[116]"></a>uart_stop_bits_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_uart.o(.text.uart_stop_bits_set))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[112]"></a>uart_tx_fifo_clr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at6010_uart.o(.text.uart_tx_fifo_clr))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[11d]"></a>write_data_frame_header</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, frame_header.o(.text.write_data_frame_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = write_data_frame_header
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[125]"></a>xtal_freq_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at6010_clock.o(.text.xtal_freq_get))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clk_dcdc_set
</UL>

<P><STRONG><a name="[82]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, btod.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btod_internal_mul
</UL>

<P><STRONG><a name="[79]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[133]"></a>__kernel_poly</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[134]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[136]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[137]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[138]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[96]"></a>__aeabi_dcmpge</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(i._dgeq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAngleStatue
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocalHeadTailCalc
</UL>

<P><STRONG><a name="[139]"></a>_dgeq</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, dcmp.o(i._dgeq), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_dcmpgt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(i._dgr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findVbMaxMagnitudeIndex
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findMaxMagnitudeIndex
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAngleStatue
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocalHeadTailCalc
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiffCalc
</UL>

<P><STRONG><a name="[13b]"></a>_dgr</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, dcmp.o(i._dgr), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_dcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(i._dleq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findVbMaxMagnitudeIndex
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findMaxMagnitudeIndex
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAngleStatue
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocalHeadTailCalc
</UL>

<P><STRONG><a name="[13c]"></a>_dleq</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dcmp.o(i._dleq), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_dcmplt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(i._dls))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmplt
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAngleStatue
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LocalHeadTailCalc
</UL>

<P><STRONG><a name="[13e]"></a>_dls</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, dcmp.o(i._dls), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[58]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[af]"></a>asin</STRONG> (Thumb, 574 bytes, Stack size 80 bytes, asin.o(i.asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = asin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAngleStatue
</UL>

<P><STRONG><a name="[140]"></a>atan</STRONG> (Thumb, 472 bytes, Stack size 56 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[ae]"></a>atan2</STRONG> (Thumb, 372 bytes, Stack size 40 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAngleStatue
</UL>

<P><STRONG><a name="[a4]"></a>sqrt</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;complexMagnitude
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[44]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[141]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[144]"></a>_dcmpeq</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[13a]"></a>_dcmpge</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, dgef.o(x$fpl$dgeqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dgr
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dgeq
</UL>

<P><STRONG><a name="[183]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, dlef.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[13d]"></a>_dcmple</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, dlef.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dls
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dleq
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cfar_thr_hw_adapt
</UL>

<P><STRONG><a name="[184]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[3b]"></a>_printf_fp_dec</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _printf_fp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[1]"></a>rangeFftIsr</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, rawdata_base_main.o(.ram_region))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = rangeFftIsr &rArr; hal_fft_set_config &rArr; cfar_thr_hw_adapt &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_process_trigger (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rawdata_base_main.o(.data.GtRangeCfg)
</UL>
<P><STRONG><a name="[2]"></a>velocFftIsr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rawdata_base_main.o(.ram_region))
<BR>[Address Reference Count : 1]<UL><LI> rawdata_base_main.o(.data.GtVelocCfg)
</UL>
<P><STRONG><a name="[0]"></a>adc_rdat_end_isr</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rawdata_base_main.o(.ram_region))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = adc_rdat_end_isr &rArr; adc_rdat_handle &rArr; hal_fft_set_config &rArr; cfar_thr_hw_adapt &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_rdat_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rawdata_base_main.o(.data.GtIfSampleCfg)
</UL>
<P><STRONG><a name="[145]"></a>adc_rdat_handle</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, rawdata_base_main.o(.ram_region))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = adc_rdat_handle &rArr; hal_fft_set_config &rArr; cfar_thr_hw_adapt &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_pwr_off (via Veneer)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_process_trigger (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_rdat_half_isr
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_rdat_end_isr
</UL>

<P><STRONG><a name="[146]"></a>adc_rdat_half_isr</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rawdata_base_main.o(.ram_region), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_rdat_handle
</UL>

<P><STRONG><a name="[185]"></a>GetTickCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rawdata_base_main.o(.ram_region), UNUSED)

<P><STRONG><a name="[8]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at6010_irq.o(.ram_region))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0plus.o(RESET)
</UL>
<P><STRONG><a name="[12a]"></a>critical_section_start</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, cpu-at601x.o(.ram_region))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init (via Veneer)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_init (via Veneer)
</UL>

<P><STRONG><a name="[12c]"></a>critical_section_end</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, cpu-at601x.o(.ram_region))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_init (via Veneer)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_init (via Veneer)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[9c]"></a>cfar_thr_hw_adapt</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, hal_fft.o(.text.cfar_thr_hw_adapt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = cfar_thr_hw_adapt &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[2f]"></a>fft_fill_this_buffer</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hal_fft.o(.text.fft_fill_this_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fft_fill_this_buffer &rArr; fft_adc_fft_addr_set
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_rdat_addr_set
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft_adc_fft_addr_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_fft.o(.text.hal_fft_set_config)
</UL>
<P><STRONG><a name="[f1]"></a>fft_rank_id_get</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, hal_fft.o(.text.fft_rank_id_get))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_fft_set_config
</UL>

<P><STRONG><a name="[30]"></a>invoke_cfar_callback</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hal_fft.o(.text.invoke_cfar_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = invoke_cfar_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_fft.o(.text.hal_fft_set_config)
</UL>
<P><STRONG><a name="[2e]"></a>invoke_fft_callback</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, hal_fft.o(.text.invoke_fft_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = invoke_fft_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_fft.o(.text.hal_fft_init)
</UL>
<P><STRONG><a name="[9b]"></a>__assert_func</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, hal_dma.o(.text.__assert_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __assert_func &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[2d]"></a>cache_flush</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at6010_cache.o(.text.cache_flush))
<BR>[Address Reference Count : 1]<UL><LI> at6010_cache.o(.text.cache_init)
</UL>
<P><STRONG><a name="[130]"></a>radar_rf_init</STRONG> (Thumb, 456 bytes, Stack size 32 bytes, at6010_radar.o(.text.radar_rf_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = radar_rf_init &rArr; delay_us &rArr; hal_dualtimer_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_section_start (via Veneer)
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_section_end (via Veneer)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_dig_vcore
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radar_rf_pwr_on
</UL>

<P><STRONG><a name="[63]"></a>_dadd1</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[62]"></a>_dsub1</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[73]"></a>_fp_digits</STRONG> (Thumb, 412 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[2c]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[81]"></a>btod_internal_mul</STRONG> (Thumb, 492 bytes, Stack size 56 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = btod_internal_mul &rArr; __ARM_common_ll_muluu
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[84]"></a>btod_internal_div</STRONG> (Thumb, 520 bytes, Stack size 64 bytes, btod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = btod_internal_div
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[89]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[7c]"></a>_printf_mbtowc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[52]"></a>_printf_post_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[51]"></a>_printf_pre_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[53]"></a>_printf_truncate_signed</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[54]"></a>_printf_truncate_unsigned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<HR></body></html>
